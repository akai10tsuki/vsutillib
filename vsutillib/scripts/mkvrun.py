"""
run command line generated by mkvmerge-gui

use the linux bash one encased in double quotes
"""


import argparse


from ..mkv import MKVCommand
from ..classes import MediaFileInfo, RunCommand


VERSION = "1.0"


def displayMKVRun(line):
    """used to display lines of the mkvmerge run"""

    if line.find("Progress:") >= 0:
        print("\r" + line[:-1], end='')
    elif line.find('The cue') == 0:
        print("\n" + line, end='')
    else:
        print(line, end='')

def mkvVerifyStructure(lstBaseFiles, lstFiles, msgs):
    """verify the file structure against the base files"""

    msg = "Error: In structure \n\nSource:\n{}\nBase Source:\n{}\n"

    for strSource, strFile in zip(lstBaseFiles, lstFiles):

        try:
            objSource = MediaFileInfo(strSource)
            objFile = MediaFileInfo(strFile)

        except OSError:

            msg = msg.format(str(objFile), str(objSource))
            msgs.append(msg)
            return False

        if objSource != objFile:

            msg = msg.format(str(objFile), str(objSource))
            msgs.append(msg)
            return False

    return True


def runMKVCommandBatch():
    """
    run mkvmerge-gui generated cli command and
    applied to all files in directory
    """

    #"'C:/Program Files/MKVToolNix\mkvmerge.exe' --ui-language en --output 'C:\Projects\Python\Develop\test\tmp\video - S01E02.mkv' --language 0:und --language 1:jpn '(' 'C:\Projects\PySide\mkvbatchmultiplex\tests\VideoFiles\video - S01E02.avi' ')' --language 0:eng '(' 'C:\Projects\PySide\mkvbatchmultiplex\tests\VideoFiles\Video - S01E02.ass' ')' --track-order 0:0,0:1,1:0"

    parser = argparse.ArgumentParser(description='mkvmerge-gui generated command line batch run utility')

    parser.add_argument(
        'command',
        help='mkvmerge-gui "command" line - used Linux/Unix shell enclose it in double quotes'
    )
    parser.add_argument(
        '--version',
        action='version',
        version='%(prog)s ' + VERSION
    )

    args = parser.parse_args()

    if args.command:
        print('command read: [{}]'.format(args.command))

    f = open("log.txt", mode='w', encoding='utf-8')

    mkv = MKVCommand()
    mkv.command = args.command

    cli = RunCommand(
        processLine=displayMKVRun,
        commandShlex=True,
        universalNewLines=True
    )

    if mkv:

        for cmd, baseFiles, sourceFiles, destinationFiles in mkv:

            msgs = []

            check = mkvVerifyStructure(baseFiles, sourceFiles, msgs)

            if check:

                msg = '\nCommand: {}\nBase Files: {}\nSource Files: {}\nDestination Files: {}\n\n'.format(
                    cmd,
                    baseFiles,
                    sourceFiles,
                    destinationFiles
                )
                print(msg)
                f.write(msg)

                cli.command = cmd
                cli.run()

                for l in cli.output:
                    f.write(str(l))

            else:
                msg = '\nDestination Files: {}\n'.format(
                    destinationFiles
                )
                f.write(msg)
                for m in msgs:
                    print(m)
                    f.write(m)

    else:

        print("Bummer...{}".format(mkv.error))

def mkvrun():
    """Run mkvmerge-gui generated command line"""

    cmd = r"'C:/Program Files/MKVToolNix\mkvmerge.exe' --ui-language en --output 'C:\Projects\Python\Develop\test\tmp\Abenobashi Mahou Shoutengai - S01E01 (1).mkv' --language 0:jpn --track-name '0:Abenobashi Mahou Shoutengai 01 [Yousei]' --default-track 0:yes --language 1:jpn --track-name '1:Japanese 2.0 FLAC [Yousei]' --default-track 1:yes --language 2:eng --track-name '2:English 5.1 AC3 [gerdhanse]' --language 3:eng --track-name '3:English Subtitles (Sub) [gerdhanse]' --default-track 3:yes --language 4:eng --track-name '4:English ED/Titles (Sub) [gerdhanse]' '(' 'S:\Plex\Series\Anime\TV\Abenobashi Mahou Shoutengai (2002)\Abenobashi Mahou Shoutengai - S01E01.mkv' ')' --title 'Abenobashi Magical Shopping Arcade 01 [BDrip 1280x720 x264] [アベノ橋魔法☆商店街]' --track-order 0:0,0:1,0:2,0:3,0:4"

    parser = argparse.ArgumentParser()

    parser.add_argument(
        'command',
        help='mkvmerge-gui command line'
    )
    args = parser.parse_args()

    if args.command:
        print('command read: [{}]'.format(args.command))

    f = open("log.txt", mode='w', encoding='utf-8')

    mkv = MKVCommand()
    mkv.command = cmd

    cli = RunCommand(
        processLine=displayMKVRun,
        commandShlex=True,
        universalNewLines=True
    )

    if mkv:

        for cmd, basefiles, sourceFiles, destinationFiles in mkv:
            print('Command: {}\n\nBase Files: {}\n\nSource Files: {}\n\nDestination Files: {}\n\n'.format(
                cmd,
                basefiles,
                sourceFiles,
                destinationFiles
            ))

            cli.command = cmd

            cli.run()

            for l in cli.output:
                f.write(str(l))
